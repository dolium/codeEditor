#include "highlighter.h"

void Highlighter::setKeywordData()
{
    keywordPatterns11 = {
        QStringLiteral("\\balignas\\b"),    QStringLiteral("\\bcase\\b"),QStringLiteral("\\bcontinue\\b"),QStringLiteral("\\bexport\\b"),
        QStringLiteral("\\balignof\\b"),    QStringLiteral("\\bcatch\\b"),QStringLiteral("\\bdecltype\\b"),QStringLiteral("\\bextern\\b"),
        QStringLiteral("\\band\\b"),        QStringLiteral("\\bchar\\b"),QStringLiteral("\\bdefault\\b"),QStringLiteral("\\bfalse\\b"),
        QStringLiteral("\\band_eq\\b"),     QStringLiteral("\\bchar16_t\\b"),QStringLiteral("\\bdelete\\b"),QStringLiteral("\\bfloat\\b"),
        QStringLiteral("\\basm\\b"),        QStringLiteral("\\bchar32_t\\b"),QStringLiteral("\\bdo\\b"),QStringLiteral("\\bfor\\b"),
        QStringLiteral("\\bauto\\b"),       QStringLiteral("\\bclass\\b"),QStringLiteral("\\bdouble\\b"),QStringLiteral("\\bfriend\\b"),
        QStringLiteral("\\bbitand\\b"),     QStringLiteral("\\bcompl\\b"),QStringLiteral("\\bdynamic_cast\\b"),QStringLiteral("\\bgoto\\b"),
        QStringLiteral("\\bbitor\\b"),      QStringLiteral("\\bconst\\b"),QStringLiteral("\\belse\\b"),QStringLiteral("\\bif\\b"),
        QStringLiteral("\\bbool\\b"),       QStringLiteral("\\bconst_cast\\b"),QStringLiteral("\\benum\\b"),QStringLiteral("\\binline\\b"),
        QStringLiteral("\\bbreak\\b"),      QStringLiteral("\\bconst_cast\\b"),QStringLiteral("\\bexplicit\\b"),QStringLiteral("\\bint\\b"),
        QStringLiteral("\\blong\\b"),       QStringLiteral("\\bor_eq\\b"),QStringLiteral("\\bregister\\b"),
        QStringLiteral("\\bmutable\\b"),    QStringLiteral("\\bprivate\\b"),QStringLiteral("\\breinterpret_cast\\b"),
        QStringLiteral("\\bnamespace\\b"),  QStringLiteral("\\bprotected\\b"),QStringLiteral("\\breturn\\b"),
        QStringLiteral("\\bnew\\b"),        QStringLiteral("\\bpublic\\b"),QStringLiteral("\\bshort\\b"),
        QStringLiteral("\\bnoexcept\\b"),   QStringLiteral("\\bsigned\\b"),QStringLiteral("\\bsizeof\\b"),
        QStringLiteral("\\bnot\\b"),        QStringLiteral("\\bstatic\\b"),QStringLiteral("\\btrue\\b"),
        QStringLiteral("\\bnot_eq\\b"),     QStringLiteral("\\bstatic_assert\\b"),QStringLiteral("\\bstatic_cast\\b"),
        QStringLiteral("\\bnullptr\\b"),    QStringLiteral("\\bstruct\\b"),QStringLiteral("\\bthis\\b"),
        QStringLiteral("\\boperator\\b"),   QStringLiteral("\\bswitch\\b"),QStringLiteral("\\bthread_local\\b"),
        QStringLiteral("\\bor\\b"),         QStringLiteral("\\btemplate\\b"),QStringLiteral("\\bthrow\\b"),
        QStringLiteral("\\btry\\b"),        QStringLiteral("\\btypedef\\b"),QStringLiteral("\\btypeid\\b"),QStringLiteral("\\btypename\\b"),
        QStringLiteral("\\bunion\\b"),      QStringLiteral("\\bunsigned\\b"),QStringLiteral("\\busing\\b"),QStringLiteral("\\bvirtual\\b"),
        QStringLiteral("\\bvoid\\b"),       QStringLiteral("\\bvolatile\\b"),QStringLiteral("\\bwchar_t\\b"),QStringLiteral("\\bwhile\\b"),
        QStringLiteral("\\bxor\\b"),        QStringLiteral("\\bxor_eq\\b")
    };
    keywordPatterns20 =
    {
        QStringLiteral("\\bchar8_t\\b"),
        QStringLiteral("\\bconcept\\b"),
        QStringLiteral("\\bconsteval\\b"),
        QStringLiteral("\\bconstinit\\b"),
        QStringLiteral("\\bco_await\\b"),
        QStringLiteral("\\bco_return\\b"),
        QStringLiteral("\\bco_yield\\b"),
        QStringLiteral("\\brequires\\b"),
        QStringLiteral("\\balignas\\b"),    QStringLiteral("\\bcase\\b"),QStringLiteral("\\bcontinue\\b"),QStringLiteral("\\bexport\\b"),
        QStringLiteral("\\balignof\\b"),    QStringLiteral("\\bcatch\\b"),QStringLiteral("\\bdecltype\\b"),QStringLiteral("\\bextern\\b"),
        QStringLiteral("\\band\\b"),        QStringLiteral("\\bchar\\b"),QStringLiteral("\\bdefault\\b"),QStringLiteral("\\bfalse\\b"),
        QStringLiteral("\\band_eq\\b"),     QStringLiteral("\\bchar16_t\\b"),QStringLiteral("\\bdelete\\b"),QStringLiteral("\\bfloat\\b"),
        QStringLiteral("\\basm\\b"),        QStringLiteral("\\bchar32_t\\b"),QStringLiteral("\\bdo\\b"),QStringLiteral("\\bfor\\b"),
        QStringLiteral("\\bauto\\b"),       QStringLiteral("\\bclass\\b"),QStringLiteral("\\bdouble\\b"),QStringLiteral("\\bfriend\\b"),
        QStringLiteral("\\bbitand\\b"),     QStringLiteral("\\bcompl\\b"),QStringLiteral("\\bdynamic_cast\\b"),QStringLiteral("\\bgoto\\b"),
        QStringLiteral("\\bbitor\\b"),      QStringLiteral("\\bconst\\b"),QStringLiteral("\\belse\\b"),QStringLiteral("\\bif\\b"),
        QStringLiteral("\\bbool\\b"),       QStringLiteral("\\bconst_cast\\b"),QStringLiteral("\\benum\\b"),QStringLiteral("\\binline\\b"),
        QStringLiteral("\\bbreak\\b"),      QStringLiteral("\\bconst_cast\\b"),QStringLiteral("\\bexplicit\\b"),QStringLiteral("\\bint\\b"),
        QStringLiteral("\\blong\\b"),       QStringLiteral("\\bor_eq\\b"),QStringLiteral("\\bregister\\b"),
        QStringLiteral("\\bmutable\\b"),    QStringLiteral("\\bprivate\\b"),QStringLiteral("\\breinterpret_cast\\b"),
        QStringLiteral("\\bnamespace\\b"),  QStringLiteral("\\bprotected\\b"),QStringLiteral("\\breturn\\b"),
        QStringLiteral("\\bnew\\b"),        QStringLiteral("\\bpublic\\b"),QStringLiteral("\\bshort\\b"),
        QStringLiteral("\\bnoexcept\\b"),   QStringLiteral("\\bsigned\\b"),QStringLiteral("\\bsizeof\\b"),
        QStringLiteral("\\bnot\\b"),        QStringLiteral("\\bstatic\\b"),QStringLiteral("\\btrue\\b"),
        QStringLiteral("\\bnot_eq\\b"),     QStringLiteral("\\bstatic_assert\\b"),QStringLiteral("\\bstatic_cast\\b"),
        QStringLiteral("\\bnullptr\\b"),    QStringLiteral("\\bstruct\\b"),QStringLiteral("\\bthis\\b"),
        QStringLiteral("\\boperator\\b"),   QStringLiteral("\\bswitch\\b"),QStringLiteral("\\bthread_local\\b"),
        QStringLiteral("\\bor\\b"),         QStringLiteral("\\btemplate\\b"),QStringLiteral("\\bthrow\\b"),
        QStringLiteral("\\btry\\b"),        QStringLiteral("\\btypedef\\b"),QStringLiteral("\\btypeid\\b"),QStringLiteral("\\btypename\\b"),
        QStringLiteral("\\bunion\\b"),      QStringLiteral("\\bunsigned\\b"),QStringLiteral("\\busing\\b"),QStringLiteral("\\bvirtual\\b"),
        QStringLiteral("\\bvoid\\b"),       QStringLiteral("\\bvolatile\\b"),QStringLiteral("\\bwchar_t\\b"),QStringLiteral("\\bwhile\\b"),
        QStringLiteral("\\bxor\\b"),        QStringLiteral("\\bxor_eq\\b")
    };

    keywordPatterns_C2018 =
    {

        QStringLiteral("\\bcase\\b"),
        QStringLiteral("\\bchar\\b"),
        QStringLiteral("\\bconst\\b"),
        QStringLiteral("\\bcontinue\\b"),
        QStringLiteral("\\bdefault\\b"),
        QStringLiteral("\\bdo\\b"),
        QStringLiteral("\\bdouble\\b"),
        QStringLiteral("\\belse\\b"),
        QStringLiteral("\\benum\\b"),
        QStringLiteral("\\bextern\\b"),
        QStringLiteral("\\bfloat\\b"),
        QStringLiteral("\\bfor\\b"),
        QStringLiteral("\\bgoto\\b"),
        QStringLiteral("\\bif\\b"),
        QStringLiteral("\\binline\\b"),
        QStringLiteral("\\bint\\b"),
        QStringLiteral("\\blong\\b"),
        QStringLiteral("\\bregister\\b"),
        QStringLiteral("\\brestrict\\b"),
        QStringLiteral("\\breturn\\b"),
        QStringLiteral("\\bshort\\b"),
        QStringLiteral("\\bsigned\\b"),
        QStringLiteral("\\bsizeof\\b"),
        QStringLiteral("\\bstatic\\b"),
        QStringLiteral("\\bstruct\\b"),
        QStringLiteral("\\bswitch\\b"),
        QStringLiteral("\\btypedef\\b"),
        QStringLiteral("\\bunion\\b"),
        QStringLiteral("\\bunsigned\\b"),
        QStringLiteral("\\bvoid\\b"),
        QStringLiteral("\\bvolatile\\b"),
        QStringLiteral("\\bwhile\\b"),
        QStringLiteral("\\b_Alignas\\b"),
        QStringLiteral("\\b_Alignof\\b"),
        QStringLiteral("\\b_Atomic\\b"),
        QStringLiteral("\\b_Bool\\b"),
        QStringLiteral("\\b_Complex\\b"),
        QStringLiteral("\\b_Decimal128\\b"),
        QStringLiteral("\\b_Decimal32\\b"),
        QStringLiteral("\\b_Decimal64\\b"),
        QStringLiteral("\\b_Generic\\b"),
        QStringLiteral("\\b_Imaginary\\b"),
        QStringLiteral("\\b_Noreturn\\b"),
        QStringLiteral("\\b_Static_assert\\b"),
        QStringLiteral("\\b_Thread_local\\b"),
    };
}
